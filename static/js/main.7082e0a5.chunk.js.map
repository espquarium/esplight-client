{"version":3,"sources":["COLORS.ts","components/Body.tsx","components/Divisor.tsx","hooks/useToggle.ts","providers/ServerProvider.tsx","hooks/useApi.ts","components/Card.tsx","components/FullScreenModal.tsx","components/Settings.tsx","components/NavBar.tsx","components/AddTime.tsx","components/TimesTable.tsx","App.tsx","index.tsx"],"names":["COLORS","primary","navbar","background","Wrapper","styled","div","Body","children","Divisor","props","height","useToggle","initialState","useState","state","setState","toggle","useCallback","oldState","SERVER_URL_KEY","ServerContext","createContext","ServerProvider","localStorage","getItem","serverUrl","setServerUrl","Provider","value","useApi","useContext","api","useMemo","axios","create","baseURL","Card","Header","Input","input","Button","button","FullScreenModal","Settings","ip","setIp","color","size","onClick","htmlFor","id","type","name","placeholder","pattern","onChange","target","includes","get","then","cogoToast","success","catch","err","error","window","setItem","header","NavBar","configOpen","AddTime","times","editTimes","date","setDate","min","max","required","valueAsDate","tTimes","momentDate","moment","add","getTimezoneOffset","push","h","m","c","sort","a","b","save","Table","table","THead","thead","TBody","tfoot","tbody","TR","tr","TD","th","td","FloatingButton","InputTable","TimesTable","addModal","scope","map","t","timeNumber","day","Date","setHours","setMinutes","hours","getHours","minutes","getMinutes","label","data-label","i","editTime","ch","channel","time","match","join","parseInt","console","log","editChannel","confirm","splice","confirmDelete","App","setTimes","editableTimes","setEditableTimes","useEffect","data","info","useDebounce","put","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7082e0a5.chunk.js","sourcesContent":["const COLORS = {\n  primary: \"#21a0a0\",\n  navbar: \"#046865\",\n  background: \"#eaeaea\",\n};\n\nexport default COLORS;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport COLORS from \"../COLORS\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  background-color: ${COLORS.background};\n`;\n\nconst Body: React.FC = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Body;\n","import styled from \"styled-components\";\n\nconst Divisor = styled.div<{ height?: number }>`\n  height: ${(props) => props.height || 10}px;\n`;\n\nexport default Divisor;\n","import { useCallback, useState } from \"react\";\n\nconst useToggle = (initialState = false): [boolean, CallableFunction] => {\n  const [state, setState] = useState<boolean>(initialState);\n\n  const toggle: CallableFunction = useCallback(\n    () => setState((oldState) => !oldState),\n    []\n  );\n\n  return [state, toggle];\n};\n\nexport default useToggle;\n","import { createContext, useState } from \"react\";\n\nexport const SERVER_URL_KEY = \"esplightserver\";\nexport interface IServerContext {\n  serverUrl: string;\n  setServerUrl: (url: string) => void;\n}\n\nexport const ServerContext = createContext({} as IServerContext);\n\nexport const ServerProvider: React.FC = ({ children }) => {\n  const [serverUrl, setServerUrl] = useState(\n    localStorage.getItem(SERVER_URL_KEY) || \"\"\n  );\n\n  return (\n    <ServerContext.Provider\n      value={{\n        serverUrl,\n        setServerUrl,\n      }}\n    >\n      {children}\n    </ServerContext.Provider>\n  );\n};\n","import axios from \"axios\";\nimport { useContext, useMemo } from \"react\";\nimport { ServerContext } from \"../providers/ServerProvider\";\n\nconst useApi = () => {\n  const { serverUrl, setServerUrl } = useContext(ServerContext);\n\n  const api = useMemo(\n    () =>\n      axios.create({\n        baseURL: serverUrl,\n      }),\n    [serverUrl]\n  );\n\n  return { api, serverUrl, setServerUrl };\n};\n\nexport default useApi;\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 10px;\n  background-color: white;\n  color: black;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport COLORS from \"../COLORS\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  z-index: 9;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: ${COLORS.background};\n\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px 0 20px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    color: ${COLORS.primary};\n  }\n`;\n\nexport const Input = styled.input`\n  /* background-color: ${COLORS.primary}; */\n  border-radius: 10px;\n  border: 1px solid black;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  text-indent: 10px;\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: ${COLORS.primary};\n  color: white;\n  font-weight: bold;\n  width: 100%;\n  border-radius: 10px;\n  border: none;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  font-size: 1rem;\n`;\n\nconst FullScreenModal: React.FC = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default FullScreenModal;\n","import axios from \"axios\";\nimport cogoToast from \"cogo-toast\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport useApi from \"../hooks/useApi\";\nimport { SERVER_URL_KEY } from \"../providers/ServerProvider\";\nimport Card from \"./Card\";\nimport Divisor from \"./Divisor\";\nimport FullScreenModal, { Button, Header, Input } from \"./FullScreenModal\";\n\nconst Settings: React.FC<{ toggle: CallableFunction }> = ({ toggle }) => {\n  const api = useApi();\n\n  const [ip, setIp] = useState(api.serverUrl);\n\n  const changeIp = (value: string) => {\n    setIp(value.includes(\"http\") ? value : `http://${value}`);\n  };\n\n  const test = () => {\n    axios\n      .get(`${ip}/verify`)\n      .then(() => cogoToast.success(\"success, server connected\"))\n      .catch((err) => cogoToast.error(\"server not found\"));\n  };\n\n  const save = () => {\n    window.localStorage.setItem(SERVER_URL_KEY, ip);\n    cogoToast.success(\"ip saved\");\n    api.setServerUrl(ip);\n  };\n\n  return (\n    <FullScreenModal>\n      <Header>\n        <h1>Settings</h1>\n        <AiOutlineClose color=\"black\" size={20} onClick={() => toggle()} />\n      </Header>\n\n      <Card>\n        <label htmlFor=\"ipv4\">Server ipv4</label>\n        <Divisor />\n        <Input\n          id=\"ipv4\"\n          type=\"url\"\n          name=\"ip\"\n          value={ip}\n          placeholder=\"type server ip here\"\n          pattern=\"^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$\"\n          onChange={({ target }) => changeIp(target.value)}\n        />\n        <Divisor />\n        <Button onClick={() => test()}>Test</Button>\n        <Divisor />\n        <Button onClick={() => save()}>Save</Button>\n      </Card>\n    </FullScreenModal>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiFillSetting } from \"react-icons/ai\";\nimport COLORS from \"../COLORS\";\nimport useToggle from \"../hooks/useToggle\";\nimport Settings from \"./Settings\";\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${COLORS.navbar};\n  color: white;\n  padding: 0 20px 0 20px;\n  box-shadow: 0px 0px 19px -4px #000000;\n  height: 60px;\n`;\n\nconst NavBar: React.FC = () => {\n  const [configOpen, toggle] = useToggle(false);\n\n  return (\n    <Wrapper>\n      <h1>🐟 Esplight</h1>\n      <AiFillSetting size={30} onClick={() => toggle()} />\n      {configOpen && <Settings toggle={() => toggle()} />}\n    </Wrapper>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { ILightTime } from \"../typings/EspLight\";\nimport Card from \"./Card\";\nimport Divisor from \"./Divisor\";\nimport FullScreenModal, { Button, Header, Input } from \"./FullScreenModal\";\nimport moment from \"moment\";\n\nconst AddTime: React.FC<{\n  toggle: CallableFunction;\n  times: ILightTime[];\n  editTimes: CallableFunction;\n}> = ({ toggle, times, editTimes }) => {\n  const [date, setDate] = useState<Date | null>();\n\n  const save = () => {\n    if (date) {\n      const tTimes = [...times];\n      const momentDate = moment(date).add(date.getTimezoneOffset(), \"minutes\");\n\n      tTimes.push({\n        h: momentDate.get(\"hours\"),\n        m: momentDate.get(\"minutes\"),\n        c: [0, 0, 0, 0],\n      });\n\n      tTimes.sort((a, b) => a.h - b.h || a.m - b.m);\n\n      editTimes(tTimes);\n\n      toggle();\n    }\n  };\n\n  return (\n    <FullScreenModal>\n      <Header>\n        <h1>Add new Time</h1>\n        <AiOutlineClose color=\"black\" size={20} onClick={() => toggle()} />\n      </Header>\n\n      <Card>\n        <label htmlFor=\"time\">Time</label>\n        <Divisor />\n        <Input\n          type=\"time\"\n          id=\"time\"\n          name=\"time\"\n          min=\"00:00\"\n          max=\"23:59\"\n          required\n          onChange={({ target }) => setDate(target.valueAsDate)}\n        />\n        <Divisor />\n        <Button onClick={() => save()}>Add</Button>\n      </Card>\n    </FullScreenModal>\n  );\n};\n\nexport default AddTime;\n","import React from \"react\";\nimport { ILightTime } from \"../typings/EspLight\";\nimport styled from \"styled-components\";\nimport COLORS from \"../COLORS\";\nimport { IoMdAdd } from \"react-icons/io\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport useToggle from \"../hooks/useToggle\";\nimport AddTime from \"./AddTime\";\nimport moment from \"moment\";\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: center;\n\n  /* border-collapse: collapse; */\n  margin: 0;\n  padding: 0;\n  table-layout: fixed;\n\n  caption {\n    font-size: 1.5em;\n    margin: 0.5em 0 0.75em;\n  }\n\n  @media screen and (max-width: 600px) {\n    & {\n      border: 0;\n    }\n\n    & caption {\n      font-size: 1.3em;\n    }\n\n    & thead {\n      border: none;\n      clip: rect(0 0 0 0);\n      height: 1px;\n      margin: -1px;\n      overflow: hidden;\n      padding: 0;\n      position: absolute;\n      width: 1px;\n    }\n\n    & tr {\n      border-bottom: 3px solid #ddd;\n      display: block;\n      margin-bottom: 0.625em;\n      margin: 5px;\n      padding: 10px;\n      background-color: white;\n      border-radius: 10px;\n    }\n\n    & td {\n      border-bottom: 1px solid #ddd;\n      display: block;\n      font-size: 0.8em;\n      text-align: right;\n    }\n\n    & td::before {\n      /*\n    * aria-label has no advantage, it won't be read inside a table\n    content: attr(aria-label);\n    */\n      content: attr(data-label);\n      float: left;\n      font-weight: bold;\n      text-transform: uppercase;\n    }\n\n    & td:last-child {\n      border-bottom: 0;\n    }\n\n    input {\n      text-align: right;\n    }\n  }\n`;\n\nexport const THead = styled.thead`\n  background-color: ${COLORS.navbar};\n  color: white;\n`;\n\nexport const TFoot = styled.tfoot`\n  // custom css goes here\n`;\n\nexport const TBody = styled.tbody`\n  // custom css goes here\n`;\n\nexport const TR = styled.tr`\n  @media screen and (min-width: 600px) {\n    :nth-child(even) {\n      background-color: #f2f2f2;\n    }\n  }\n`;\n\nexport const TH = styled.th`\n  // custom css goes here\n`;\n\nexport const TD = styled.td``;\n\nexport const FloatingButton = styled.div`\n  right: 20px;\n  bottom: 20px;\n  position: fixed;\n\n  padding: 15px;\n  background-color: ${COLORS.primary};\n  border-radius: 50%;\n\n  box-shadow: 5px 5px 15px -5px rgba(0, 0, 0, 0.34);\n\n  cursor: pointer;\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst InputTable = styled.input`\n  background-color: inherit;\n  display: table-cell;\n  /* width: 100%; */\n  /* padding: 10px; */\n  border: none;\n  text-align: center;\n  /* margin: 0px; */\n  :focus {\n    /* width: 100%; */\n    outline: -webkit-focus-ring-color auto 1px;\n  }\n`;\n\nconst TimesTable: React.FC<{\n  times: ILightTime[];\n  editTimes: CallableFunction;\n}> = ({ times, editTimes }) => {\n  const [addModal, toggle] = useToggle(false);\n\n  const editChannel = (value: string, time: number, channel: 0 | 1 | 2 | 3) => {\n    const numberPattern = /\\d+/g;\n    value = value.match(numberPattern)?.join(\"\") || \"0\";\n    const tTimes = [...times];\n    tTimes[time].c[channel] = parseInt(value);\n    editTimes(tTimes);\n    console.log(`editChannel ${time} - ${channel}`);\n  };\n\n  const editTime = (date: Date | null, i: number) => {\n    if (date) {\n      const tTimes = [...times];\n\n      const momentDate = moment(date).add(date.getTimezoneOffset(), \"minutes\");\n\n      tTimes[i].h = momentDate.get(\"hours\");\n      tTimes[i].m = momentDate.get(\"minutes\");\n      editTimes(tTimes);\n    }\n  };\n\n  const confirmDelete = (label: string, i: number) => {\n    const confirm = window.confirm(`confirm delete of time ${label}?`);\n\n    if (confirm) {\n      const tTimes = [...times];\n      tTimes.splice(i, 1);\n      editTimes(tTimes);\n    }\n  };\n\n  return (\n    <>\n      {addModal && (\n        <AddTime times={times} toggle={toggle} editTimes={editTimes} />\n      )}\n\n      <FloatingButton onClick={() => toggle()}>\n        <IoMdAdd color=\"white\" />\n      </FloatingButton>\n      <Table>\n        <caption>Light Times</caption>\n        <THead>\n          <TR>\n            <th scope=\"col\">Time</th>\n            <th scope=\"col\">CH1</th>\n            <th scope=\"col\">CH2</th>\n            <th scope=\"col\">CH3</th>\n            <th scope=\"col\">CH4</th>\n            <th scope=\"col\"></th>\n          </TR>\n        </THead>\n        <TBody>\n          {times.map((t, timeNumber) => {\n            const day = new Date();\n            day.setHours(t.h);\n            day.setMinutes(t.m);\n\n            const hours = day.getHours();\n            const minutes = day.getMinutes();\n\n            const label = `${hours < 10 ? \"0\" : \"\"}${hours}:${\n              minutes < 10 ? \"0\" : \"\"\n            }${minutes}`;\n\n            return (\n              <TR key={`row${timeNumber}`}>\n                <TD data-label=\"Time\" scope=\"row\">\n                  <InputTable\n                    type=\"time\"\n                    value={label}\n                    onChange={({ target }) =>\n                      editTime(target.valueAsDate, timeNumber)\n                    }\n                  />\n                </TD>\n                {t.c.map((ch, channel) => (\n                  <TD data-label={`ch${channel}`}>\n                    <InputTable\n                      value={`${ch}%`}\n                      onChange={({ target }) =>\n                        editChannel(\n                          target.value,\n                          timeNumber,\n                          channel as 0 | 1 | 2 | 3\n                        )\n                      }\n                    />\n                  </TD>\n                ))}\n                <TD data-label=\"action\">\n                  <AiFillCloseCircle\n                    onClick={() => confirmDelete(label, timeNumber)}\n                  />\n                </TD>\n              </TR>\n            );\n          })}\n        </TBody>\n      </Table>\n    </>\n  );\n};\n\nexport default TimesTable;\n","import cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Body from \"./components/Body\";\nimport Divisor from \"./components/Divisor\";\nimport NavBar from \"./components/NavBar\";\nimport TimesTable from \"./components/TimesTable\";\nimport useApi from \"./hooks/useApi\";\nimport { useDebounce } from \"@coinsamba/react-tiny-hooks\";\nimport { ILightTime } from \"./typings/EspLight\";\n\nfunction App() {\n  const api = useApi();\n\n  const [times, setTimes] = useState<ILightTime[]>([]);\n  const [editableTimes, setEditableTimes] = useState<ILightTime[]>();\n\n  useEffect(() => {\n    if (api.serverUrl) {\n      api.api\n        .get(\"/light-times\")\n        .then(({ data }) => {\n          cogoToast.success(\"loaded light times\");\n          setTimes(data);\n        })\n        .catch(() => {\n          cogoToast.error(\"error when load data, check your device\");\n        });\n    } else {\n      cogoToast.info(\"no server found in configuration, please add before use\");\n    }\n  }, [api.serverUrl, api.api]);\n\n  useDebounce(\n    () => {\n      if (api.serverUrl && editableTimes) {\n        api.api\n          .put(\"/light-times\", editableTimes)\n          .then(({ data }) => {\n            cogoToast.success(\"saved light times\");\n            setTimes(data);\n          })\n          .catch(() => {\n            cogoToast.error(\"error when save data, check your device\");\n          });\n      }\n    },\n    750,\n    [editableTimes]\n  );\n\n  return (\n    <Body>\n      <NavBar />\n      <Divisor height={20} />\n      <TimesTable times={times} editTimes={setEditableTimes} />\n    </Body>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ServerProvider } from \"./providers/ServerProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ServerProvider>\n      <App />\n    </ServerProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}