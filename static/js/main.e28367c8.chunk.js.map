{"version":3,"sources":["COLORS.ts","components/Body.tsx","components/Divisor.tsx","hooks/useToggle.ts","providers/ServerProvider.tsx","hooks/useApi.ts","components/Card.tsx","components/FullScreenModal.tsx","components/Settings.tsx","components/NavBar.tsx","components/AddTime.tsx","components/TimesTable.tsx","hooks/useDebounce.ts","App.tsx","index.tsx"],"names":["COLORS","primary","navbar","background","Wrapper","styled","div","Body","children","Divisor","props","height","useToggle","initialState","useState","state","setState","toggle","useCallback","oldState","SERVER_URL_KEY","ServerContext","createContext","ServerProvider","localStorage","getItem","serverUrl","setServerUrl","Provider","value","useApi","useContext","api","axios","create","baseURL","Card","Header","Input","input","Button","button","FullScreenModal","Settings","ip","setIp","color","size","onClick","htmlFor","id","type","name","placeholder","pattern","onChange","target","includes","get","then","cogoToast","success","catch","err","error","window","setItem","header","NavBar","configOpen","AddTime","times","editTimes","date","setDate","min","max","required","valueAsDate","tTimes","offSet","getTimezoneOffset","push","h","getUTCHours","m","getUTCMinutes","c","sort","a","b","save","Table","table","THead","thead","TBody","tfoot","tbody","TR","tr","TD","th","td","FloatingButton","InputTable","TimesTable","addModal","scope","map","t","i","day","Date","setUTCHours","setUTCMinutes","hours","getHours","minutes","getMinutes","label","data-label","editTime","ch","chi","match","join","console","log","parseInt","editChannel","confirm","splice","confirmDelete","useDebounce","effect","delay","deps","callback","useEffect","handler","setTimeout","clearTimeout","App","setTimes","editableTimes","setEditableTimes","data","info","put","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e28367c8.chunk.js","sourcesContent":["const COLORS = {\r\n  primary: \"#21a0a0\",\r\n  navbar: \"#046865\",\r\n  background: \"#eaeaea\",\r\n};\r\n\r\nexport default COLORS;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport COLORS from \"../COLORS\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  background-color: ${COLORS.background};\r\n`;\r\n\r\nconst Body: React.FC = ({ children }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nexport default Body;\r\n","import styled from \"styled-components\";\r\n\r\nconst Divisor = styled.div<{ height?: number }>`\r\n  height: ${(props) => props.height || 10}px;\r\n`;\r\n\r\nexport default Divisor;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nconst useToggle = (initialState = false): [boolean, CallableFunction] => {\r\n  const [state, setState] = useState<boolean>(initialState);\r\n\r\n  const toggle: CallableFunction = useCallback(\r\n    () => setState((oldState) => !oldState),\r\n    []\r\n  );\r\n\r\n  return [state, toggle];\r\n};\r\n\r\nexport default useToggle;\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const SERVER_URL_KEY = \"esplightserver\";\r\nexport interface IServerContext {\r\n  serverUrl: string;\r\n  setServerUrl: (url: string) => void;\r\n}\r\n\r\nexport const ServerContext = createContext({} as IServerContext);\r\n\r\nexport const ServerProvider: React.FC = ({ children }) => {\r\n  const [serverUrl, setServerUrl] = useState(\r\n    localStorage.getItem(SERVER_URL_KEY) || \"\"\r\n  );\r\n\r\n  return (\r\n    <ServerContext.Provider\r\n      value={{\r\n        serverUrl,\r\n        setServerUrl,\r\n      }}\r\n    >\r\n      {children}\r\n    </ServerContext.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { ServerContext } from \"../providers/ServerProvider\";\r\n\r\nconst useApi = () => {\r\n  const { serverUrl, setServerUrl } = useContext(ServerContext);\r\n\r\n  const api = axios.create({\r\n    baseURL: serverUrl,\r\n  });\r\n\r\n  return { api, serverUrl, setServerUrl };\r\n};\r\n\r\nexport default useApi;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  color: black;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport COLORS from \"../COLORS\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  z-index: 9;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: ${COLORS.background};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 20px 0 20px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    color: ${COLORS.primary};\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  /* background-color: ${COLORS.primary}; */\r\n  border-radius: 10px;\r\n  border: 1px solid black;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  text-indent: 10px;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: ${COLORS.primary};\r\n  color: white;\r\n  font-weight: bold;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  border: none;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst FullScreenModal: React.FC = ({ children }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nexport default FullScreenModal;\r\n","import axios from \"axios\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { SERVER_URL_KEY } from \"../providers/ServerProvider\";\r\nimport Card from \"./Card\";\r\nimport Divisor from \"./Divisor\";\r\nimport FullScreenModal, { Button, Header, Input } from \"./FullScreenModal\";\r\n\r\nconst Settings: React.FC<{ toggle: CallableFunction }> = ({ toggle }) => {\r\n  const api = useApi();\r\n\r\n  const [ip, setIp] = useState(api.serverUrl);\r\n\r\n  const changeIp = (value: string) => {\r\n    setIp(value.includes(\"http\") ? value : `http://${value}`);\r\n  };\r\n\r\n  const test = () => {\r\n    axios\r\n      .get(`${ip}/verify`)\r\n      .then(() => cogoToast.success(\"success, server connected\"))\r\n      .catch((err) => cogoToast.error(\"server not found\"));\r\n  };\r\n\r\n  const save = () => {\r\n    window.localStorage.setItem(SERVER_URL_KEY, ip);\r\n    cogoToast.success(\"ip saved\");\r\n    api.setServerUrl(ip);\r\n  };\r\n\r\n  return (\r\n    <FullScreenModal>\r\n      <Header>\r\n        <h1>Settings</h1>\r\n        <AiOutlineClose color=\"black\" size={20} onClick={() => toggle()} />\r\n      </Header>\r\n\r\n      <Card>\r\n        <label htmlFor=\"ipv4\">Server ipv4</label>\r\n        <Divisor />\r\n        <Input\r\n          id=\"ipv4\"\r\n          type=\"url\"\r\n          name=\"ip\"\r\n          value={ip}\r\n          placeholder=\"type server ip here\"\r\n          pattern=\"^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$\"\r\n          onChange={({ target }) => changeIp(target.value)}\r\n        />\r\n        <Divisor />\r\n        <Button onClick={() => test()}>Test</Button>\r\n        <Divisor />\r\n        <Button onClick={() => save()}>Save</Button>\r\n      </Card>\r\n    </FullScreenModal>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillSetting } from \"react-icons/ai\";\r\nimport COLORS from \"../COLORS\";\r\nimport useToggle from \"../hooks/useToggle\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: ${COLORS.navbar};\r\n  color: white;\r\n  padding: 0 20px 0 20px;\r\n  box-shadow: 0px 0px 19px -4px #000000;\r\n  height: 60px;\r\n`;\r\n\r\nconst NavBar: React.FC = () => {\r\n  const [configOpen, toggle] = useToggle(false);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h1>🐟 Esplight</h1>\r\n      <AiFillSetting size={30} onClick={() => toggle()} />\r\n      {configOpen && <Settings toggle={() => toggle()} />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { ILightTime } from \"../typings/EspLight\";\r\nimport Card from \"./Card\";\r\nimport Divisor from \"./Divisor\";\r\nimport FullScreenModal, { Button, Header, Input } from \"./FullScreenModal\";\r\n\r\nconst AddTime: React.FC<{\r\n  toggle: CallableFunction;\r\n  times: ILightTime[];\r\n  editTimes: CallableFunction;\r\n}> = ({ toggle, times, editTimes }) => {\r\n  const [date, setDate] = useState<Date | null>();\r\n\r\n  const save = () => {\r\n    if (date) {\r\n      const tTimes = [...times];\r\n      const offSet = date.getTimezoneOffset() / 60;\r\n\r\n      tTimes.push({\r\n        h: date.getUTCHours() + offSet,\r\n        m: date.getUTCMinutes(),\r\n        c: [0, 0, 0, 0],\r\n      });\r\n\r\n      tTimes.sort((a, b) => a.h - b.h || a.m - b.m);\r\n\r\n      editTimes(tTimes);\r\n\r\n      toggle();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FullScreenModal>\r\n      <Header>\r\n        <h1>Add new Time</h1>\r\n        <AiOutlineClose color=\"black\" size={20} onClick={() => toggle()} />\r\n      </Header>\r\n\r\n      <Card>\r\n        <label htmlFor=\"time\">Time</label>\r\n        <Divisor />\r\n        <Input\r\n          type=\"time\"\r\n          id=\"time\"\r\n          name=\"time\"\r\n          min=\"00:00\"\r\n          max=\"23:59\"\r\n          required\r\n          onChange={({ target }) => setDate(target.valueAsDate)}\r\n        />\r\n        <Divisor />\r\n        <Button onClick={() => save()}>Add</Button>\r\n      </Card>\r\n    </FullScreenModal>\r\n  );\r\n};\r\n\r\nexport default AddTime;\r\n","import React from \"react\";\r\nimport { ILightTime } from \"../typings/EspLight\";\r\nimport format from \"date-fns/format\";\r\nimport styled from \"styled-components\";\r\nimport COLORS from \"../COLORS\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport useToggle from \"../hooks/useToggle\";\r\nimport AddTime from \"./AddTime\";\r\n\r\nexport const Table = styled.table`\r\n  width: 100%;\r\n  text-align: center;\r\n\r\n  /* border-collapse: collapse; */\r\n  margin: 0;\r\n  padding: 0;\r\n  table-layout: fixed;\r\n\r\n  caption {\r\n    font-size: 1.5em;\r\n    margin: 0.5em 0 0.75em;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    & {\r\n      border: 0;\r\n    }\r\n\r\n    & caption {\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    & thead {\r\n      border: none;\r\n      clip: rect(0 0 0 0);\r\n      height: 1px;\r\n      margin: -1px;\r\n      overflow: hidden;\r\n      padding: 0;\r\n      position: absolute;\r\n      width: 1px;\r\n    }\r\n\r\n    & tr {\r\n      border-bottom: 3px solid #ddd;\r\n      display: block;\r\n      margin-bottom: 0.625em;\r\n      margin: 5px;\r\n      padding: 10px;\r\n      background-color: white;\r\n      border-radius: 10px;\r\n    }\r\n\r\n    & td {\r\n      border-bottom: 1px solid #ddd;\r\n      display: block;\r\n      font-size: 0.8em;\r\n      text-align: right;\r\n    }\r\n\r\n    & td::before {\r\n      /*\r\n    * aria-label has no advantage, it won't be read inside a table\r\n    content: attr(aria-label);\r\n    */\r\n      content: attr(data-label);\r\n      float: left;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    & td:last-child {\r\n      border-bottom: 0;\r\n    }\r\n\r\n    input {\r\n      text-align: right;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const THead = styled.thead`\r\n  background-color: ${COLORS.navbar};\r\n  color: white;\r\n`;\r\n\r\nexport const TFoot = styled.tfoot`\r\n  // custom css goes here\r\n`;\r\n\r\nexport const TBody = styled.tbody`\r\n  // custom css goes here\r\n`;\r\n\r\nexport const TR = styled.tr`\r\n  @media screen and (min-width: 600px) {\r\n    :nth-child(even) {\r\n      background-color: #f2f2f2;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TH = styled.th`\r\n  // custom css goes here\r\n`;\r\n\r\nexport const TD = styled.td``;\r\n\r\nexport const FloatingButton = styled.div`\r\n  right: 20px;\r\n  bottom: 20px;\r\n  position: fixed;\r\n\r\n  padding: 15px;\r\n  background-color: ${COLORS.primary};\r\n  border-radius: 50%;\r\n\r\n  box-shadow: 5px 5px 15px -5px rgba(0, 0, 0, 0.34);\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst InputTable = styled.input`\r\n  background-color: inherit;\r\n  display: table-cell;\r\n  /* width: 100%; */\r\n  /* padding: 10px; */\r\n  border: none;\r\n  text-align: center;\r\n  /* margin: 0px; */\r\n  :focus {\r\n    /* width: 100%; */\r\n    outline: -webkit-focus-ring-color auto 1px;\r\n  }\r\n`;\r\n\r\nconst TimesTable: React.FC<{\r\n  times: ILightTime[];\r\n  editTimes: CallableFunction;\r\n}> = ({ times, editTimes }) => {\r\n  const [addModal, toggle] = useToggle(false);\r\n\r\n  const editChannel = (value: string, i: number, chi: 0 | 1 | 2 | 3) => {\r\n    const numberPattern = /\\d+/g;\r\n    value = value.match(numberPattern)?.join(\"\") || \"0\";\r\n    console.log(value);\r\n    const tTimes = [...times];\r\n    tTimes[i].c[chi] = parseInt(value);\r\n    editTimes(tTimes);\r\n  };\r\n\r\n  const editTime = (day: Date | null, i: number) => {\r\n    if (day) {\r\n      const offSet = day.getTimezoneOffset() / 60;\r\n      const tTimes = [...times];\r\n      tTimes[i].h = day.getUTCHours() + offSet;\r\n      tTimes[i].m = day.getUTCMinutes();\r\n      editTimes(tTimes);\r\n    }\r\n  };\r\n\r\n  const confirmDelete = (label: string, i: number) => {\r\n    const confirm = window.confirm(`confirm delete of time ${label}?`);\r\n\r\n    if (confirm) {\r\n      const tTimes = [...times];\r\n      tTimes.splice(i, 1);\r\n      editTimes(tTimes);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {addModal && (\r\n        <AddTime times={times} toggle={toggle} editTimes={editTimes} />\r\n      )}\r\n\r\n      <FloatingButton onClick={() => toggle()}>\r\n        <IoMdAdd color=\"white\" />\r\n      </FloatingButton>\r\n      <Table>\r\n        <caption>Light Times</caption>\r\n        <THead>\r\n          <TR>\r\n            <th scope=\"col\">Time</th>\r\n            <th scope=\"col\">CH1</th>\r\n            <th scope=\"col\">CH2</th>\r\n            <th scope=\"col\">CH3</th>\r\n            <th scope=\"col\">CH4</th>\r\n            <th scope=\"col\"></th>\r\n          </TR>\r\n        </THead>\r\n        <TBody>\r\n          {times.map((t, i) => {\r\n            const day = new Date();\r\n            day.setUTCHours(t.h);\r\n            day.setUTCMinutes(t.m);\r\n\r\n            const hours = day.getHours();\r\n            const minutes = day.getMinutes();\r\n\r\n            const label = `${hours < 10 ? \"0\" : \"\"}${hours}:${\r\n              minutes < 10 ? \"0\" : \"\"\r\n            }${minutes}`;\r\n\r\n            return (\r\n              <TR>\r\n                <TD data-label=\"Time\" scope=\"row\">\r\n                  <InputTable\r\n                    type=\"time\"\r\n                    value={label}\r\n                    onChange={({ target }) => editTime(target.valueAsDate, i)}\r\n                  />\r\n                </TD>\r\n                {t.c.map((ch, chi) => (\r\n                  <TD data-label={`ch${chi}`}>\r\n                    <InputTable\r\n                      value={`${ch}%`}\r\n                      onChange={({ target }) =>\r\n                        editChannel(target.value, i, chi as 0 | 1 | 2 | 3)\r\n                      }\r\n                    />\r\n                  </TD>\r\n                ))}\r\n                <TD data-label=\"action\">\r\n                  <AiFillCloseCircle onClick={() => confirmDelete(label, i)} />\r\n                </TD>\r\n              </TR>\r\n            );\r\n          })}\r\n        </TBody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimesTable;\r\n","import { useEffect, useCallback } from \"react\";\r\n\r\nconst useDebounce = (\r\n  effect: (...args: any[]) => any,\r\n  delay: number,\r\n  deps: any[]\r\n) => {\r\n  const callback = useCallback(effect, deps);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      callback();\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [callback, delay]);\r\n};\r\n\r\nexport default useDebounce;\r\n","import cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Body from \"./components/Body\";\nimport Divisor from \"./components/Divisor\";\nimport NavBar from \"./components/NavBar\";\nimport TimesTable from \"./components/TimesTable\";\nimport useApi from \"./hooks/useApi\";\nimport useDebounce from \"./hooks/useDebounce\";\nimport { ILightTime } from \"./typings/EspLight\";\n// @ts-ignore\nimport isEqual from \"lodash.isequal\";\n\nfunction App() {\n  const api = useApi();\n\n  const [times, setTimes] = useState<ILightTime[]>([]);\n  const [editableTimes, setEditableTimes] = useState<ILightTime[]>();\n\n  useEffect(() => {\n    if (api.serverUrl) {\n      api.api\n        .get(\"/light-times\")\n        .then(({ data }) => {\n          cogoToast.success(\"loaded light times\");\n          setTimes(data);\n        })\n        .catch(() => {\n          cogoToast.error(\"error when load data, check your device\");\n        });\n    } else {\n      cogoToast.info(\"no server found in configuration, please add before use\");\n    }\n  }, [api.serverUrl]);\n\n  useDebounce(\n    () => {\n      if (api.serverUrl && editableTimes) {\n        api.api\n          .put(\"/light-times\", editableTimes)\n          .then(({ data }) => {\n            cogoToast.success(\"saved light times\");\n            setTimes(data);\n          })\n          .catch(() => {\n            cogoToast.error(\"error when save data, check your device\");\n          });\n      }\n    },\n    750,\n    [editableTimes]\n  );\n\n  return (\n    <Body>\n      <NavBar />\n      <Divisor height={20} />\n      <TimesTable times={times} editTimes={setEditableTimes} />\n    </Body>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ServerProvider } from \"./providers/ServerProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ServerProvider>\n      <App />\n    </ServerProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}